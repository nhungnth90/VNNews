{"version":3,"sources":["component/m_timeline.scss","mixins/_mixins.scss","base/_custom-variables.scss"],"names":[],"mappings":"AAOA,UACI,cAAe,KADnB,iBAIQ,eAAgB,KAChB,cAAe,KACf,cAAe,IAAA,MAAA,KANvB,wBAUQ,UAAW,KACX,YAAa,KAXrB,wBAeQ,MAAO,MACP,WAAY,MACZ,MAAO,KACP,aAAc,KCwCd,yBD1DR,wBAqBY,MAAO,OAKnB,iBAEQ,gBAAiB,OAFzB,kCAMQ,MAAO,KACP,WEnCQ,QF4BhB,gBAWQ,UAAW,KACX,UAAW,OACX,MAAO,KACP,MAAO,KACP,OAAQ,KACR,WEzCQ,QF0CR,aAAc,IACd,QAAS,KACT,YAAa,OACb,gBAAiB,OACjB,OAAQ,EAAA,KACR,cAAe,cAIvB,MACI,UAAW,KACX,UAAW,OACX,QAAS,KACT,YAAa,OACb,gBAAiB,OACjB,OAAQ,KACR,WE1DY,QF2DZ,WAAY,KACZ,cAAe","file":"../../scss/component/m_timeline.css","sourcesContent":["/* ====================================\r\n   TIMELINE\r\n   ==================================== */\r\n\r\n@import \"../base/custom-variables\";\r\n@import \"../mixins/mixins\";\r\n\r\n.timeline {\r\n    margin-bottom: 16px;\r\n\r\n    .story {\r\n        padding-bottom: 16px;\r\n        margin-bottom: 16px;\r\n        border-bottom: 1px solid #eee;\r\n    }\r\n\r\n    .story__title {\r\n        font-size: 16px;\r\n        line-height: 24px;\r\n    }\r\n\r\n    .story__thumb {\r\n        width: 125px;\r\n        max-height: 100px;\r\n        float: left;\r\n        margin-right: 16px;\r\n\r\n        @include breakpoint(768px) {\r\n            width: 150px;\r\n        }\r\n    }\r\n}\r\n\r\n.pag {\r\n    .pagination {\r\n        justify-content: center;\r\n    }\r\n\r\n    .page-item.active .page-link {\r\n        color: #fff;\r\n        background: $primary;\r\n    }\r\n\r\n    .page-link {\r\n        font-size: 16px;\r\n        font-size: 1.6rem;\r\n        color: #222;\r\n        width: 35px;\r\n        height: 35px;\r\n        background: $info;\r\n        margin-right: 5px;\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: center;\r\n        border: 0 none;\r\n        border-radius: 50% !important;\r\n    }\r\n}\r\n\r\n.sort {\r\n    font-size: 12px;\r\n    font-size: 1.2rem;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    height: 40px;\r\n    background: $info;\r\n    margin-top: 16px;\r\n    border-radius: 20px;\r\n}","/* ====================================\r\n * Mixins\r\n * ==================================== */\r\n\r\n@mixin breakpoint($min: 0, $max: 0) {\r\n    $type: type-of($min);\r\n\r\n    @if $type==string {\r\n        @if $min==xs {\r\n            @media (max-width: $grid-float-breakpoint-max) {\r\n                @content;\r\n            }\r\n\r\n            // Mobile Devices\r\n        }\r\n\r\n        @else if $min==sm {\r\n            @media (min-width: $grid-float-breakpoint) {\r\n                @content;\r\n            }\r\n\r\n            // Tablet Devices\r\n        }\r\n\r\n        @else if $min==md {\r\n            @media (min-width: $screen-md) {\r\n                @content;\r\n            }\r\n\r\n            // Desktops\r\n        }\r\n\r\n        @else if $min==lg {\r\n            @media (min-width: $screen-lg) {\r\n                @content;\r\n            }\r\n\r\n            // Widescreen Desktops\r\n        }\r\n\r\n        // Otherwise pass a warning to the compiler as to the appropriate options\r\n        @else {\r\n            @warn \"The breakpoint mixin supports the following attributes: xs, sm, md, lg\";\r\n        }\r\n    }\r\n\r\n    @else if $type==number {\r\n        // Allow for custom parameters for min and max size\r\n        $query: \"all\" !default;\r\n\r\n        @if $min !=0 and $max !=0 {\r\n            $query: \"(min-width: #{$min}) and (max-width: #{$max})\";\r\n        }\r\n\r\n        // set both min and max\r\n        @else if $min !=0 and $max==0 {\r\n            $query: \"(min-width: #{$min})\";\r\n        }\r\n\r\n        // set just min\r\n        @else if $min==0 and $max !=0 {\r\n            $query: \"(max-width: #{$max})\";\r\n        }\r\n\r\n        // set just max\r\n        @media #{$query} {\r\n            @content;\r\n        }\r\n    }\r\n}\r\n\r\n\r\n/* Layout\r\n * ==================================== */\r\n\r\n// Thumb\r\n@mixin thumb {\r\n    /*!*/\r\n    display: block;\r\n    overflow: hidden;\r\n    position: relative;\r\n    background: #f7f7f7;\r\n\r\n    img {\r\n        width: 100%;\r\n    }\r\n}","/* ====================================\r\n   Custom Bootstrap Variables\r\n   ==================================== */\r\n\r\n// Color system\r\n$primary:       #0066B3 !default;   // Blue\r\n$secondary:     #FCB500 !default;   // Yellow\r\n$success:       #002642 !default;   // Blue ( Denim )\r\n$info:          #f7f7f7 !default;\r\n\r\n// Typography\r\n$font-family-sans-serif:      \"Roboto\", \"Segoe UI\", Roboto, \"Helvetica Neue\", Arial, sans-serif !default;\r\n$font-family-serif:           \"PlayfairDisplay\", serif !default;\r\n$font-family-base:            \"Poppins\", \"Segoe UI\", Roboto, \"Helvetica Neue\", Arial, sans-serif !default;\r\n\r\n$font-weight-base:            400 !default;\r\n$line-height-base:            1.5 !default;"]}